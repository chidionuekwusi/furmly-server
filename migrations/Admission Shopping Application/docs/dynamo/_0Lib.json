[{"_id":{"$objectID":"5a993fff09e8ea4724032f40"},"code":"exports = function(application, _fn) {\n  this.async.waterfall(\n    [\n      fn => {\n        this.entityRepo.infrastructure().fileUpload.readFile(application.personalDetails.passport, null, (er, data, description) => {\n          if (er) return fn(er);\n          if (data) application.personalDetails.passport = `data:${description.mime};base64,${data.toString(\"base64\")}`;\n          fn(null, application);\n        });\n      },\n      (application, fn) => {\n        let d = application.personalDetails,\n          l = application.shoppingDetails;\n          /*foundLGA = (d.state.lgas && d.state.lgas.filter(x => x._id == d.lga)) || null,\n          lga = (foundLGA && foundLGA.length && foundLGA[0].name) || \"N/A\";*/\n        fn(null, [\n          [\"PASSPORT\", { passport: d.passport }],\n          [\n            \"PERSONAL_DETAILS\",\n            {\n              details: [\n                [\"Surname\", d.surname],\n                [\"First Name\", d.firstName],\n                [\"Middle Name\", d.middleName],\n                [\"Gender\", d.gender.name],\n                [\"JAMB REG NO\", application.registrationNumber ],\n                [\"PUTME SCORE\", d.jambScore],\n                [\"SCREENING SCORE\", d.screeningScore],\n                [\"FACULTY\", d.department.faculty.name],\n                [\"DEPARTMENT\", d.department.name],\n                [\"Faculty Shopping Into\",l.faculty.name],\n                [\"Course Shopping Into\",l.department.name],\n                [\"Date Registered\",(new Date(application.created)).toLocaleString()]\n              ]\n            }\n          ]\n        ]);\n      }\n    ],\n    (er, arr) => {\n      if (er) return _fn(er);\n      return _fn(null, arr);\n    }\n  );\n};\n","uid":"prepareAdmissionShopping","__v":0}]
