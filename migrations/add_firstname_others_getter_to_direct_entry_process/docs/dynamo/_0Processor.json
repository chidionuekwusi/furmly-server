[{"_id":{"$objectID":"5a6abc4cb0e23c31183e6fbd"},"code":"this.libs.getDomain.call(this, (er, domain) => {\n  if (er) return callback(er);\n\n  let merchantConfig = this.libs.flattenByNamespace(\"remita\", domain.config);\n  this.debug(merchantConfig);\n  this.libs.confirmRemitaPayment.call(this, this.args.invoiceNumber, merchantConfig, domain, (er, status) => {\n    if (er) return callback(er);\n\n    if (!status) return callback(new Error(\"You have been unable to confirm payment has been made against \" + this.args.invoiceNumber));\n\n    this.debug('payment successfully confirmed');\n    callback(null, { _invoiceNumber: this.args.invoiceNumber });\n  });\n});\n","title":"Check RRR transaction status","uid":"CHECK_RRR_STATUS","requiresIdentity":true,"__v":0,"standalone":false,"_references":["getDomain","flattenByNamespace","confirmRemitaPayment"],"_code":"this.libs.getDomain.call(this, (er, domain) => {\ntry{\n{\n  if (er) return callback(er);\n\n  let merchantConfig = this.libs.flattenByNamespace(\"remita\", domain.config);\n  this.debug(merchantConfig);\n  this.libs.confirmRemitaPayment.call(this, this.args.invoiceNumber, merchantConfig, domain, (er, status) => {\ntry{\n{\n    if (er) return callback(er);\n\n    if (!status) return callback(new Error(\"You have been unable to confirm payment has been made against \" + this.args.invoiceNumber));\n\n    this.debug('payment successfully confirmed');\n    callback(null, { _invoiceNumber: this.args.invoiceNumber });\n  }\n} catch(e){\n//an unexpected error has just occurred. \n callback(e);}});\n}\n} catch(e){\n//an unexpected error has just occurred. \n callback(e);}});\n"},{"_id":{"$objectID":"5a6e0aecd58b164cf0d46f7e"},"code":"this.debug(\"inserting o lvl ui\");\n//this.debug(this.args);\nthis.libs.getOLevelDetailsUI.call(this, (er, ui) => {\n  if (er) return callback(er);\n  this.args.$nextStep.form.elements.push(...ui);\n  return callback(null, this.args);\n});\n","title":"Insert Olevel Details","requiresIdentity":true,"__v":0,"standalone":false,"_references":["getOLevelDetailsUI"],"_code":"this.debug(\"inserting o lvl ui\");\n//this.debug(this.args);\nthis.libs.getOLevelDetailsUI.call(this, (er, ui) => {\ntry{\n{\n  if (er) return callback(er);\n  this.args.$nextStep.form.elements.push(...ui);\n  return callback(null, this.args);\n}\n} catch(e){\n//an unexpected error has just occurred. \n callback(e);}});\n"},{"_id":{"$objectID":"5a70cb6ea5538a22fc20eac6"},"code":"//NOTE: No user should ever be issued a claim to call this processor\nthis.libs.getDomain.call(this, (er, domain) => {\n  if (er) return callback(er);\n  Object.defineProperties(this.args, {\n    $appDomain: {\n      enumerable: false,\n      get: function() {\n        return domain;\n      }\n    }\n  });\n  callback(null, this.args);\n});\n","title":"Get Domain Config [NEVER ISSUE THIS CLAIM TO ANY USER]","requiresIdentity":true,"uid":"GET_DOMAIN_CONFIG","__v":0,"standalone":false,"_references":["getDomain"],"_code":"//NOTE: No user should ever be issued a claim to call this processor\nthis.libs.getDomain.call(this, (er, domain) => {\ntry{\n{\n  if (er) return callback(er);\n  Object.defineProperties(this.args, {\n    $appDomain: {\n      enumerable: false,\n      get: function() {\n        return domain;\n      }\n    }\n  });\n  callback(null, this.args);\n}\n} catch(e){\n//an unexpected error has just occurred. \n callback(e);}});\n"},{"_id":{"$objectID":"5a72b60d48dda81fc8cd8f15"},"code":"setImmediate(callback, null, (Object.keys(this.args).length && this.args) || null);\n","title":"Make args initial data for a process","requiresIdentity":true,"__v":0,"standalone":false,"uid":"ARGS_TO_DATA","_references":[],"_code":"setImmediate(callback, null, (Object.keys(this.args).length && this.args) || null);\n"},{"_id":{"$objectID":"5a76bd8616fdef36906796ff"},"code":"//because this exposes sensitive information make sure it is called from a process context.\nif (!this.args.$process || this.args.propertyIsEnumerable(\"$process\")) callback(new Error(\"You are unauthorized\"));\nelse\n  this.entityRepo.get(\n    this.args.$appDomain.config.invoiceClass,\n    { invoiceNumber: this.args.invoiceNumber },\n    { one: true },\n    (er, invoice) => {\n      if (er) return callback(er);\n      if (!invoice) return callback(new Error(\"Invalid invoice number\"));\n\n      this.entityRepo.get(\"JambList\", { regNumb: invoice.extra.registrationNumber }, { one: true }, (er, j) => {\n        if (er) return callback(er);\n        if (!j) return callback(new Error(\"Couldnt find any jamb details with reg number:\" + invoice.extra.registrationNumber));\n\n        this.debug(j);\n        this.async.parallel(\n          [\n            this.entityRepo.get.bind(null, \"State\", { code: new RegExp(j.state, \"i\") }, { one: true }),\n            this.entityRepo.get.bind(null, \"Gender\", { name: new RegExp(\"^\" + j.sex, \"i\") }, { one: true }),\n            this.entityRepo.get.bind(\n              null,\n              \"Department\",\n              {\n                $or: [{ domain: this.args.$appDomain._id, code: j.corsAbrev }, { domain: this.args.$appDomain._id, jambCode: j.corsAbrev }]\n              },\n              { one: true }\n            )\n          ],\n          (er, results) => {\n            if (er) return callback(er);\n            if (!results[2]) {\n              let e = {\n                  2: \"department\"\n                },\n                message = results.reduce((sum, x, index) => {\n                  return (sum += !x ? `${e[index]} ,` : \"\"), sum;\n                }, \"Information about candidates \");\n              message = message.substring(0, message.length - 1) + \" is unavailable. Please contact system administrator to correct.\";\n\n              return callback(new Error(message));\n            }\n\n            let yearOfBirth = parseInt(new Date().getFullYear()) - j.age;\n            dob = new Date();\n            dob.setFullYear(yearOfBirth), ([state, gender, department] = results);\n            return callback(null, {\n              invoiceNumber: this.args.invoiceNumber,\n              registrationNumber: invoice.extra.registrationNumber,\n              personalDetails: {\n                firstName: j.firstName,\n                surname: j.surname,\n                middleName: j.middleName,\n                dob,\n                gender: gender && gender._id,\n                state: state && state._id,\n                mobile: invoice.extra.mobile || j.telNo\n              },\n              jambInfo: `Registration Number:${j.regNumb}\\nDepartment:${department.name}\\nSubjects:${[\n                \"ENG\",\n                j.subj2,\n                j.subj3,\n                j.subj4\n              ].join()}\\nScore:${j.totalScore}`\n            });\n          }\n        );\n      });\n    }\n  );\n","title":"Get Jamb Info","requiresIdentity":true,"__v":0,"standalone":false,"_references":[],"_code":"//because this exposes sensitive information make sure it is called from a process context.\nif (!this.args.$process || this.args.propertyIsEnumerable(\"$process\")) callback(new Error(\"You are unauthorized\"));\nelse\n  this.entityRepo.get(\n    this.args.$appDomain.config.invoiceClass,\n    { invoiceNumber: this.args.invoiceNumber },\n    { one: true },\n    (er, invoice) => {\ntry{\n{\n      if (er) return callback(er);\n      if (!invoice) return callback(new Error(\"Invalid invoice number\"));\n\n      this.entityRepo.get(\"JambList\", { regNumb: invoice.extra.registrationNumber }, { one: true }, (er, j) => {\ntry{\n{\n        if (er) return callback(er);\n        if (!j) return callback(new Error(\"Couldnt find any jamb details with reg number:\" + invoice.extra.registrationNumber));\n\n        this.debug(j);\n        this.async.parallel(\n          [\n            this.entityRepo.get.bind(null, \"State\", { code: new RegExp(j.state, \"i\") }, { one: true }),\n            this.entityRepo.get.bind(null, \"Gender\", { name: new RegExp(\"^\" + j.sex, \"i\") }, { one: true }),\n            this.entityRepo.get.bind(\n              null,\n              \"Department\",\n              {\n                $or: [{ domain: this.args.$appDomain._id, code: j.corsAbrev }, { domain: this.args.$appDomain._id, jambCode: j.corsAbrev }]\n              },\n              { one: true }\n            )\n          ],\n          (er, results) => {\ntry{\n{\n            if (er) return callback(er);\n            if (!results[2]) {\n              let e = {\n                  2: \"department\"\n                },\n                message = results.reduce((sum, x, index) => {\n                  return (sum += !x ? `${e[index]} ,` : \"\"), sum;\n                }, \"Information about candidates \");\n              message = message.substring(0, message.length - 1) + \" is unavailable. Please contact system administrator to correct.\";\n\n              return callback(new Error(message));\n            }\n\n            let yearOfBirth = parseInt(new Date().getFullYear()) - j.age;\n            dob = new Date();\n            dob.setFullYear(yearOfBirth), ([state, gender, department] = results);\n            return callback(null, {\n              invoiceNumber: this.args.invoiceNumber,\n              registrationNumber: invoice.extra.registrationNumber,\n              personalDetails: {\n                firstName: j.firstName,\n                surname: j.surname,\n                middleName: j.middleName,\n                dob,\n                gender: gender && gender._id,\n                state: state && state._id,\n                mobile: invoice.extra.mobile || j.telNo\n              },\n              jambInfo: `Registration Number:${j.regNumb}\\nDepartment:${department.name}\\nSubjects:${[\n                \"ENG\",\n                j.subj2,\n                j.subj3,\n                j.subj4\n              ].join()}\\nScore:${j.totalScore}`\n            });\n          }\n} catch(e){\n//an unexpected error has just occurred. \n callback(e);}}\n        );\n      }\n} catch(e){\n//an unexpected error has just occurred. \n callback(e);}});\n    }\n} catch(e){\n//an unexpected error has just occurred. \n callback(e);}}\n  );\n"},{"_id":{"$objectID":"5a76c99c16fdef369067970f"},"code":"this.libs.getPersonalDetailsUI.call(this, (er, ui) => {\n  if (er) return callback(er);\n  this.args.$nextStep.form.elements.unshift(...ui);\n  return callback(null, this.args);\n});\n","title":"Inject Personal Details","requiresIdentity":true,"__v":0,"standalone":false,"_references":["getPersonalDetailsUI"],"_code":"this.libs.getPersonalDetailsUI.call(this, (er, ui) => {\ntry{\n{\n  if (er) return callback(er);\n  this.args.$nextStep.form.elements.unshift(...ui);\n  return callback(null, this.args);\n}\n} catch(e){\n//an unexpected error has just occurred. \n callback(e);}});\n"},{"_id":{"$objectID":"5a943027964fc73928e855bb"},"code":"//this is now reasonable because processors can be marked none-standalone.\r\nthis.libs.confirmInvoiceIsFor.call(this, this.args.invoiceNumber, this.args.$process.config.form, er => {\r\n  if (er) return callback(er);\r\n\r\n  return this.libs.skipApplicationIfAllowed.call(\r\n    this,\r\n    (this.args.$appDomain || this.args.$domain).config[this.args.$process.config.applicationClass],\r\n    this.args.$process.config.formProcessor,\r\n    callback\r\n  );\r\n});\r\n","title":"Confirm invoice is for [Application Type]","requiresIdentity":true,"standalone":false,"__v":0,"uid":"CONFIRM_INVOICE_IS_FOR","_references":["confirmInvoiceIsFor","skipApplicationIfAllowed"],"_code":"//this is now reasonable because processors can be marked none-standalone.\r\nthis.libs.confirmInvoiceIsFor.call(this, this.args.invoiceNumber, this.args.$process.config.form, er => {\ntry{\n{\r\n  if (er) return callback(er);\r\n\r\n  return this.libs.skipApplicationIfAllowed.call(\r\n    this,\r\n    (this.args.$appDomain || this.args.$domain).config[this.args.$process.config.applicationClass],\r\n    this.args.$process.config.formProcessor,\r\n    callback\r\n  );\r\n}\n} catch(e){\n//an unexpected error has just occurred. \n callback(e);}});\r\n"},{"_id":{"$objectID":"5a991e920289f525649e0ddd"},"code":"let application = new this.libs.ExternalApplication(this);\napplication.extend = function(fn) {\n  if (!this.args.requiresReview || (this.args.requiresReview && this.args.isConfirmation))\n    this.libs.moveFilesToPermanentSite.call(\n      this,\n      Object.keys(this.args.credentials).reduce((sum, x) => {\n        if (this.args.credentials[x]) sum.push(this.args.credentials[x]);\n        return sum;\n      }, []),\n      fn\n    );\n  else setImmediate(fn);\n};\napplication.register(\n  \"directEntryAdmissionApplicationClass\",\n  [\"PERSONAL_DETAILS\", \"OLEVEL_DETAILS\"],\n  [\n    function(application, cb) {\n      let deDetails = [\n        \"DIRECT_ENTRY_DETAILS\",\n        {\n          department: application.department.name,\n          faculty: application.department.faculty && application.department.faculty.name,\n          school: this.args.$appDomain.name,\n          regNo: application.registrationNumber,\n          grade: application.grade.name,\n          certificateType: application.certificateType.name\n        }\n      ];\n      deDetails.name = \"Programme of Study\";\n      setImmediate(cb, null, [deDetails, [\"BOOTSTRAP\"]]);\n    }\n  ],\n  callback\n);\n","title":"Submit Direct Entry Admission","uid":"SUBMIT_DIRECT_ENTRY","requiresIdentity":true,"standalone":true,"__v":0,"_references":["ExternalApplication","moveFilesToPermanentSite"],"_code":"let application = new this.libs.ExternalApplication(this);\napplication.extend = function(fn) {\ntry{\n{\n  if (!this.args.requiresReview || (this.args.requiresReview && this.args.isConfirmation))\n    this.libs.moveFilesToPermanentSite.call(\n      this,\n      Object.keys(this.args.credentials).reduce((sum, x) => {\n        if (this.args.credentials[x]) sum.push(this.args.credentials[x]);\n        return sum;\n      }, []),\n      fn\n    );\n  else setImmediate(fn);\n}\n} catch(e){\n//an unexpected error has just occurred. \n fn(e);}};\napplication.register(\n  \"directEntryAdmissionApplicationClass\",\n  [\"PERSONAL_DETAILS\", \"OLEVEL_DETAILS\"],\n  [\n    function(application, cb) {\ntry{\n{\n      let deDetails = [\n        \"DIRECT_ENTRY_DETAILS\",\n        {\n          department: application.department.name,\n          faculty: application.department.faculty && application.department.faculty.name,\n          school: this.args.$appDomain.name,\n          regNo: application.registrationNumber,\n          grade: application.grade.name,\n          certificateType: application.certificateType.name\n        }\n      ];\n      deDetails.name = \"Programme of Study\";\n      setImmediate(cb, null, [deDetails, [\"BOOTSTRAP\"]]);\n    }\n} catch(e){\n//an unexpected error has just occurred. \n cb(e);}}\n  ],\n  callback\n);\n"},{"_id":{"$objectID":"5aa7a3ee5e2c0f19a8cbe978"},"code":"this.libs.getCertificatesHistoryUI.call(this, (er, ui) => {\n  if (er) return callback(er);\n  this.args.$nextStep.form.elements.push(...ui);\n  return callback(null, this.args);\n});\n","title":"Insert Certificates","uid":"INSERT_CERTIFICATES","requiresIdentity":false,"standalone":true,"__v":0,"_references":["getCertificatesHistoryUI"],"_code":"this.libs.getCertificatesHistoryUI.call(this, (er, ui) => {\ntry{\n{\n  if (er) return callback(er);\n  this.args.$nextStep.form.elements.push(...ui);\n  return callback(null, this.args);\n}\n} catch(e){\n//an unexpected error has just occurred. \n callback(e);}});\n"},{"_id":{"$objectID":"5aadaa3a1d72c25720a6b67d"},"code":"this.entityRepo.get(this.args.$appDomain.config.invoiceClass, { invoiceNumber: this.args.invoiceNumber }, { one: true }, (er, invoice) => {\n  if (er) return callback(er);\n  if (!invoice) return callback(new Error(\"Cannot find any invoice with that invoice number\"));\n  \n  return callback(\n    null,\n    Object.assign(this.args, {\n      personalDetails: {\n        firstName: invoice.extra.firstName,\n        surname: invoice.extra.surname,\n        middleName: invoice.extra.middleName\n      }\n    })\n  );\n});\n","title":"Get Firstname,Middlename and Surname from Invoice","requiresIdentity":true,"standalone":false,"__v":0,"_references":[],"_code":"this.entityRepo.get(this.args.$appDomain.config.invoiceClass, { invoiceNumber: this.args.invoiceNumber }, { one: true }, (er, invoice) => {\ntry{\n{\n  if (er) return callback(er);\n  if (!invoice) return callback(new Error(\"Cannot find any invoice with that invoice number\"));\n  \n  return callback(\n    null,\n    Object.assign(this.args, {\n      personalDetails: {\n        firstName: invoice.extra.firstName,\n        surname: invoice.extra.surname,\n        middleName: invoice.extra.middleName\n      }\n    })\n  );\n}\n} catch(e){\n//an unexpected error has just occurred. \n callback(e);}});\n"},{"_id":{"$objectID":"5abcd55cb0e76c31248d7372"},"code":"let e = this.libs.createElement.bind(this),\n  c = this.constants,\n  required = this.libs.createRequiredValidator.bind(this.libs),\n  cred = e(\"credentials\", \"Credentials\", \"\", c.ELEMENTTYPE.SECTION, { elements: [] }, [required()]),\n  i = cred.args.elements;\ni.push(\n  e(\n    \"birthCertificate\",\n    \"Birth Certificate\",\n    \"Please upload a scanned copy of your birth certificate\",\n    c.ELEMENTTYPE.FILEUPLOAD,\n    {\n      fileType: \"png|jpeg|jpg|bmp\",\n      showPreview: true\n    },\n    [required()]\n  )\n);\ni.push(\n  e(\n    \"lgaIdentification\",\n    \"Local Government Identification\",\n    \"Please upload a scanned copy of your local government identification certificate\",\n    c.ELEMENTTYPE.FILEUPLOAD,\n    {\n      fileType: \"png|jpeg|jpg|bmp\",\n      showPreview: true\n    },\n    [required()]\n  )\n);\n\ni.push(\n  e(\n    \"testimonials\",\n    \"Testimonials\",\n    \"Please upload a scanned copy of your Testimonials\",\n    c.ELEMENTTYPE.FILEUPLOAD,\n    {\n      fileType: \"png|jpeg|jpg|bmp\",\n      showPreview: true\n    },\n    [required()]\n  )\n);\ni.push(\n  e(\n    \"firstSchoolLeaving\",\n    \"First School Leaving Certificate\",\n    \"Please upload a scanned copy\",\n    c.ELEMENTTYPE.FILEUPLOAD,\n    {\n      fileType: \"png|jpeg|jpg|bmp\",\n      showPreview: true\n    },\n    [required()]\n  )\n);\n\n\n\ni.push(\n  e(\n    \"oLevelResultSlip\",\n    \"O'Level Result Slip 1\",\n    \"Please upload a scanned copy\",\n    c.ELEMENTTYPE.FILEUPLOAD,\n    {\n      fileType: \"png|jpeg|jpg|bmp\",\n      showPreview: true\n    },\n    [required()]\n  )\n);\n\ni.push(\n  e(\"oLevelResultSlip2\", \"O'Level Result Slip 2\", \"Please upload a scanned copy\", c.ELEMENTTYPE.FILEUPLOAD, {\n    fileType: \"png|jpeg|jpg|bmp\",\n    showPreview: true\n  })\n);\n\nthis.args.$nextStep.form.elements.push(cred);\nsetImmediate(callback, null, this.args);\n","title":"Insert Scanned Direct Entry Credentials","uid":"GET_SCANNED_DIR_ENTRY_CREDENTIALS_UI","requiresIdentity":true,"standalone":true,"__v":0,"_references":["createElement","createRequiredValidator"],"_code":"let e = this.libs.createElement.bind(this),\n  c = this.constants,\n  required = this.libs.createRequiredValidator.bind(this.libs),\n  cred = e(\"credentials\", \"Credentials\", \"\", c.ELEMENTTYPE.SECTION, { elements: [] }, [required()]),\n  i = cred.args.elements;\ni.push(\n  e(\n    \"birthCertificate\",\n    \"Birth Certificate\",\n    \"Please upload a scanned copy of your birth certificate\",\n    c.ELEMENTTYPE.FILEUPLOAD,\n    {\n      fileType: \"png|jpeg|jpg|bmp\",\n      showPreview: true\n    },\n    [required()]\n  )\n);\ni.push(\n  e(\n    \"lgaIdentification\",\n    \"Local Government Identification\",\n    \"Please upload a scanned copy of your local government identification certificate\",\n    c.ELEMENTTYPE.FILEUPLOAD,\n    {\n      fileType: \"png|jpeg|jpg|bmp\",\n      showPreview: true\n    },\n    [required()]\n  )\n);\n\ni.push(\n  e(\n    \"testimonials\",\n    \"Testimonials\",\n    \"Please upload a scanned copy of your Testimonials\",\n    c.ELEMENTTYPE.FILEUPLOAD,\n    {\n      fileType: \"png|jpeg|jpg|bmp\",\n      showPreview: true\n    },\n    [required()]\n  )\n);\ni.push(\n  e(\n    \"firstSchoolLeaving\",\n    \"First School Leaving Certificate\",\n    \"Please upload a scanned copy\",\n    c.ELEMENTTYPE.FILEUPLOAD,\n    {\n      fileType: \"png|jpeg|jpg|bmp\",\n      showPreview: true\n    },\n    [required()]\n  )\n);\n\n\n\ni.push(\n  e(\n    \"oLevelResultSlip\",\n    \"O'Level Result Slip 1\",\n    \"Please upload a scanned copy\",\n    c.ELEMENTTYPE.FILEUPLOAD,\n    {\n      fileType: \"png|jpeg|jpg|bmp\",\n      showPreview: true\n    },\n    [required()]\n  )\n);\n\ni.push(\n  e(\"oLevelResultSlip2\", \"O'Level Result Slip 2\", \"Please upload a scanned copy\", c.ELEMENTTYPE.FILEUPLOAD, {\n    fileType: \"png|jpeg|jpg|bmp\",\n    showPreview: true\n  })\n);\n\nthis.args.$nextStep.form.elements.push(cred);\nsetImmediate(callback, null, this.args);\n"}]
