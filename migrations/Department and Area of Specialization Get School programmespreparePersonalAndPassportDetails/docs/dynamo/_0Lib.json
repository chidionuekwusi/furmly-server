[{"_id":{"$objectID":"5a71b3a6037da90d5cbc4bc1"},"code":"exports = function(application, _fn) {\n  this.async.waterfall(\n    [\n      fn => {\n        this.entityRepo.infrastructure().fileUpload.readFile(application.personalDetails.passport, null, (er, data, description) => {\n          if (er) return fn(er);\n          if (data) application.personalDetails.passport = `data:${description.mime};base64,${data.toString(\"base64\")}`;\n          fn(null, application);\n        });\n      },\n      (application, fn) => {\n        let d = application.personalDetails,\n          l = application.oLevel,\n          foundLGA = (d.state && d.state.lgas && d.state.lgas.filter(x => x._id.toString() == d.lga.toString())) || null,\n          lga = (foundLGA && foundLGA.length && foundLGA[0].name) || \"N/A\",\n          passport = [\"PASSPORT\", { passport: d.passport }],\n          personalDetails = [\n            \"PERSONAL_DETAILS\",\n            {\n              details: [\n                [\"First Name\", d.firstName],\n                [\"Middle Name\", d.middleName],\n                [\"Surname\", d.surname],\n                [\"State of Origin\", d.state && d.state.name],\n                [\"Local Government\", lga],\n                [\"Phone\", d.mobile],\n                [\"Gender\", d.gender && d.gender.name],\n                [\"Contact Address\", d.mailingAddress],\n                [\"Date of Birth\", d.dob && d.dob.toLocaleDateString()]\n              ]\n            }\n          ];\n\n        personalDetails.name = \"BIO DATA\";\n        fn(null, [passport, personalDetails]);\n      }\n    ],\n    (er, arr) => {\n      if (er) return _fn(er);\n      return _fn(null, arr);\n    }\n  );\n};\n","uid":"preparePassportAndPersonalDetails","__v":0}]
