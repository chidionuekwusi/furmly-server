[{"_id":{"$objectID":"59ab3c5ef43ed31314c3bb7a"},"code":"this.debug(this.args);\nthis.entityRepo.get(\"Department\", Object.assign({}, this.args.query || {}, { domain: this.args.$user.domain }), (er, deps) => {\n  if (er) return callback(er);\n  if (!deps.length) return callback(null, deps);\n  callback(\n    null,\n    deps.map(x => {\n      let result = {\n        id: x._id,\n        displayLabel: x.name,\n        elements: []\n      };\n\n      if (x.areasOfSpecialization && x.areasOfSpecialization.length)\n        result.elements.push(\n          this.libs.createElement(\"areaOfSpecialization\", \"Area of Specialization\", \"\", this.constants.ELEMENTTYPE.SELECTSET, {\n            items: x.areasOfSpecialization.map(a => ({ id: a._id, displayLabel: a.name }))\n          })\n        );\n      return result;\n    })\n  );\n});\n","title":"Get Department And Areas of Specialization Set","requiresIdentity":false,"__v":0,"uid":"DEPARTMENTS_AND_AREA","standalone":true},{"_id":{"$objectID":"59b1051e9fcdd93b28dbf323"},"code":"this.debug('fetching School Programmes.');\nthis.debug(this.args);\nthis.libs.getEntity.call(this,'SchoolProgramme','name',callback);","title":"Get SchoolProgramme","uid":"GET_SCHOOLPROGRAMME","requiresIdentity":false,"__v":0,"standalone":true}]
