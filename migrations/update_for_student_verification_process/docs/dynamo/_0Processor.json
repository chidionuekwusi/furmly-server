[{"_id":{"$objectID":"59ade2c0223c1f4ae44b83a2"},"code":"//check if this student account has already been created.\n//if it has , return the interim username and password.\n//if it hasnt create the student account with an interim username and password.\nlet decisionTree = {\n  NEW: fn => {\n    this.libs.verifyStudent.call(\n      this,\n      {\n        studentEntity: \"UNN_Student\",\n        studentEntityKindClass: \"UNN_Admission_Ticket\",\n        studentRole: \"unn_student\",\n        domainUID: /unn/i\n      },\n      fn\n    );\n  },\n  EXISTING: fn => {\n    this.libs.verifyStudent.call(\n      this,\n      {\n        studentEntity: \"UNN_Student\",\n        studentEntityKindClass: \"UNN_Existing_Student\",\n        studentRole: \"unn_student\",\n        domainUID: /unn/i,\n        resolveEntityKind: () => {\n          return this.entityRepo.get.bind(\n            null,\n            \"UNN_Existing_Student\",\n            { regNo: this.args.option.regNo, studentType: this.args.studentType },\n            { full: true }\n          );\n        },\n        extendNewStudent: () => ({ regNo: this.args.option.regNo, cleared: true })\n      },\n      fn\n    );\n  }\n};\n\ndecisionTree[this.args.studentOption]((error, username) => {\n  callback(null, {\n    info: `Welcome! Your username is ${username} and password is ${username}.\\nYou are advised to login, change your password and update your profile.`\n  });\n});\n","title":"Verify new user for student and return credentials","requiresIdentity":true,"__v":0,"standalone":false}]
