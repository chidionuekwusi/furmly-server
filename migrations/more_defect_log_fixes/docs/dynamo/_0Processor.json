[{"_id":{"$objectID":"59b1051e9fcdd93b28dbf323"},"code":"this.debug('fetching School Programmes.');\nthis.debug(this.args);\nthis.libs.getEntity.call(this,'SchoolProgramme','name',callback);","title":"Get SchoolProgramme","uid":"GET_SCHOOLPROGRAMME","requiresIdentity":false,"__v":0,"standalone":true,"_references":["getEntity"],"_code":"this.debug('fetching School Programmes.');\nthis.debug(this.args);\nthis.libs.getEntity.call(this,'SchoolProgramme','name',callback);"},{"_id":{"$objectID":"59f5b46250ee85284c080a9c"},"code":"this.debug(\"fetching Course...\");\nthis.$checkDomain = true;\nthis.libs.getEntity.call(this, \"Course\", \"name\", callback);\n","title":"Get Courses","requiresIdentity":false,"__v":0,"standalone":true,"uid":"Get_Courses","_references":["getEntity"],"_code":"this.debug(\"fetching Course...\");\nthis.$checkDomain = true;\nthis.libs.getEntity.call(this, \"Course\", \"name\", callback);\n"},{"_id":{"$objectID":"5aa7a6735e2c0f19a8cbe979"},"code":"let index = 0,\r\n  e = (...rest) => {\r\n    index = index + 1;\r\n    return Object.assign({ order: index }, this.libs.createElement.apply(this, rest));\r\n  },\r\n  c = this.constants,\r\n  required = this.libs.createRequiredValidator,\r\n  admissionInfo = this.libs.createElement(\"admissionInfo\", \"\", \"\", c.ELEMENTTYPE.SECTION, {\r\n    elements: [\r\n      e(\r\n        \"hasAppliedForAdmission\",\r\n        \"Have you ever applied for admission into this University\",\r\n        \"\",\r\n        c.ELEMENTTYPE.SELECTSET,\r\n        {\r\n          items: [{ displayLabel: \"YES\", _id: \"YES\" }, { displayLabel: \"NO\", _id: \"NO\" }].map(x => ({\r\n            id: x._id,\r\n            displayLabel: x.displayLabel,\r\n            elements: x._id === \"NO\" ? [] : [\r\n              e(\"yearOfApplication\", \"When?\", \"\", c.ELEMENTTYPE.INPUT, {\r\n                type: \"date\"\r\n              }),\r\n              e(\r\n                \"wasOfferedAdmission\",\r\n                \"Were you offered admission?\",\r\n                \"\",\r\n                c.ELEMENTTYPE.SELECT,\r\n                {\r\n                  type: \"PROCESSOR\",\r\n                  config: {\r\n                    value: \"YES_NO_OPTIONS\"\r\n                  }\r\n                }\r\n              ),\r\n              e(\"course\", \"Course\", \"\", c.ELEMENTTYPE.SELECT, {\r\n                type: \"PROCESSOR\",\r\n                config: {\r\n                  value: \"Get_Courses\"\r\n                }\r\n              })\r\n            ]\r\n          }))\r\n        },\r\n        [required()]\r\n      )\r\n    ]\r\n  });\r\nthis.args.$nextStep.form.elements.push(admissionInfo);\r\nsetImmediate(callback, null, this.args);\r\n","title":"Previous Admission Info","uid":"PREVIOUS_ADMISSION_INFO","requiresIdentity":true,"standalone":false,"__v":0,"_references":["createElement","createRequiredValidator"],"_code":"let index = 0,\r\n  e = (...rest) => {\r\n    index = index + 1;\r\n    return Object.assign({ order: index }, this.libs.createElement.apply(this, rest));\r\n  },\r\n  c = this.constants,\r\n  required = this.libs.createRequiredValidator,\r\n  admissionInfo = this.libs.createElement(\"admissionInfo\", \"\", \"\", c.ELEMENTTYPE.SECTION, {\r\n    elements: [\r\n      e(\r\n        \"hasAppliedForAdmission\",\r\n        \"Have you ever applied for admission into this University\",\r\n        \"\",\r\n        c.ELEMENTTYPE.SELECTSET,\r\n        {\r\n          items: [{ displayLabel: \"YES\", _id: \"YES\" }, { displayLabel: \"NO\", _id: \"NO\" }].map(x => ({\r\n            id: x._id,\r\n            displayLabel: x.displayLabel,\r\n            elements: x._id === \"NO\" ? [] : [\r\n              e(\"yearOfApplication\", \"When?\", \"\", c.ELEMENTTYPE.INPUT, {\r\n                type: \"date\"\r\n              }),\r\n              e(\r\n                \"wasOfferedAdmission\",\r\n                \"Were you offered admission?\",\r\n                \"\",\r\n                c.ELEMENTTYPE.SELECT,\r\n                {\r\n                  type: \"PROCESSOR\",\r\n                  config: {\r\n                    value: \"YES_NO_OPTIONS\"\r\n                  }\r\n                }\r\n              ),\r\n              e(\"course\", \"Course\", \"\", c.ELEMENTTYPE.SELECT, {\r\n                type: \"PROCESSOR\",\r\n                config: {\r\n                  value: \"Get_Courses\"\r\n                }\r\n              })\r\n            ]\r\n          }))\r\n        },\r\n        [required()]\r\n      )\r\n    ]\r\n  });\r\nthis.args.$nextStep.form.elements.push(admissionInfo);\r\nsetImmediate(callback, null, this.args);\r\n"}]
