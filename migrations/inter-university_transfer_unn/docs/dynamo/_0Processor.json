[{"_id":{"$objectID":"59c00e3bc0e590076ce619ee"},"code":"this.libs.getDomain.call(this, (er, domain) => {\n  if (er) return callback(er);\n  let query = Object.assign(this.args.query || {}, { domain: domain._id });\n  this.debug(\"faculties query.....========================================================================x\");\n  this.debug(query);\n  this.debug(\"faculties query.....========================================================================x\");\n  this.entityRepo.get(\"Faculty\", query, (er, faculties) => {\n    if (er) return callback(er);\n\n    this.entityRepo.getProcessor({ uid: \"GET_DEPARTMENTS\" }, { one: true }, (er, processor) => {\n      if (er) return callback(er);\n      if (!processor) return callback(new Error(\"Cannot find department list\"));\n      let elements = [],\n        e = this.libs.createElement;\n      callback(\n        null,\n        faculties.map(x => ({\n          id: x._id.toString(),\n          displayLabel: x.name,\n          elements: [\n            e(\"department\", \"Department\", \"\", this.constants.ELEMENTTYPE.SELECT, {\n              type: \"PROCESSOR\",\n              config: {\n                value: processor._id.toString(),\n                customArgs: JSON.stringify({ query: { faculty: { isObjectID: true, value: x._id.toString() } } })\n              }\n            })\n          ]\n        }))\n      );\n    });\n  });\n});\n","title":"Get Faculties and Departments UI","requiresIdentity":false,"__v":0,"standalone":true,"uid":"GET_FACULTIES_DEPARTMENTS_UI"},{"_id":{"$objectID":"5a6abc4cb0e23c31183e6fbd"},"code":"this.libs.getDomain.call(this, (er, domain) => {\n  if (er) return callback(er);\n\n  let merchantConfig = this.libs.flattenByNamespace(\"remita\", domain.config);\n  this.debug(merchantConfig);\n  this.libs.confirmRemitaPayment.call(this, this.args.invoiceNumber, merchantConfig, domain, (er, status) => {\n    if (er) return callback(er);\n\n    if (!status) return callback(new Error(\"You have been unable to confirm payment has been made against \" + this.args.invoiceNumber));\n\n    this.debug('payment successfully confirmed');\n    callback(null, { _invoiceNumber: this.args.invoiceNumber });\n  });\n});\n","title":"Check RRR transaction status","requiresIdentity":true,"__v":0,"standalone":false},{"_id":{"$objectID":"5a6e0aecd58b164cf0d46f7e"},"code":"this.debug(\"inserting o lvl ui\");\n//this.debug(this.args);\nthis.libs.getOLevelDetailsUI.call(this, (er, ui) => {\n  if (er) return callback(er);\n  this.args.$nextStep.form.elements.push(...ui);\n  return callback(null, this.args);\n});\n","title":"Insert Olevel Details","requiresIdentity":true,"__v":0,"standalone":false},{"_id":{"$objectID":"5a70cb6ea5538a22fc20eac6"},"code":"//NOTE: No user should ever be issued a claim to call this processor\nthis.libs.getDomain.call(this, (er, domain) => {\n  if (er) return callback(er);\n  Object.defineProperties(this.args, {\n    $appDomain: {\n      enumerable: false,\n      get: function() {\n        return domain;\n      }\n    }\n  });\n  callback(null, this.args);\n});\n","title":"Get Domain Config [NEVER ISSUE THIS CLAIM TO ANY USER]","requiresIdentity":true,"__v":0,"standalone":false},{"_id":{"$objectID":"5a72b60d48dda81fc8cd8f15"},"code":"setImmediate(callback, null, (Object.keys(this.args).length && this.args) || null);\n","title":"Make args initial data for a process","requiresIdentity":true,"__v":0,"standalone":false},{"_id":{"$objectID":"5a76c99c16fdef369067970f"},"code":"this.libs.getPersonalDetailsUI.call(this, (er, ui) => {\n  if (er) return callback(er);\n  this.args.$nextStep.form.elements.unshift(...ui);\n  return callback(null, this.args);\n});\n","title":"Inject Personal Details","requiresIdentity":true,"__v":0,"standalone":false},{"_id":{"$objectID":"5a9533870af7e52b7852c996"},"code":"this.libs.accurateFormDeclarationUI.call(this, (er, ui) => {\n  if (er) return callback(er);\n  this.args.$nextStep.form.elements.push(...ui);\n  return callback(null, this.args);\n});\n","title":"Accurate Form declaration","requiresIdentity":false,"standalone":true,"__v":0},{"_id":{"$objectID":"5aa6997952b6d327b4a5de93"},"code":"if (this.args.$user && Object.keys(this.args.$user).length > 0) {\n  this.debug(\"user tried to register while logged in.\");\n  callback(new Error(\"Unauthorized\"));\n} else\n  this.libs.confirmInvoiceIsFor.call(this, this.args.invoiceNumber, \"INTER_UNIVERSITY_TRANSFER\", er => {\n    if (er) return callback(er);\n    return this.libs.skipApplicationIfAllowed.call(\n      this,\n      this.args.$appDomain.config.interUniversityTransferApplicationClass,\n      \"INTER_UNIVERSITY_TRANSFER\",\n      callback\n    );\n  });\n","title":"Confirm Invoice is for Inter-University transfers","uid":"CONFIRM_INVOICE_IS_FOR_SANDWICH","requiresIdentity":false,"standalone":true,"__v":0},{"_id":{"$objectID":"5aa786e85e2c0f19a8cbe96d"},"code":"new this.libs.ExternalApplication(this).register(\r\n  \"interUniversityTransferApplicationClass\",\r\n  [\"PERSONAL_DETAILS\", \"OLEVEL_DETAILS\", \"INTER_UNIVERSITY_DETAILS\"],\r\n  [\r\n    function(application, cb) {\r\n      setImmediate(cb, null, [[\"GENERAL_STYLES\", \"TABLE_STYLES\"]]);\r\n    }\r\n  ],\r\n  callback\r\n);\r\n","title":"Submit University Inter-transfer","uid":"SUBMIT_INTER_TRANSFER","requiresIdentity":false,"standalone":true,"__v":0},{"_id":{"$objectID":"5aa7966d5e2c0f19a8cbe973"},"code":"let index = 0,\n  e = (...rest) => {\n    index = index + 1;\n    return Object.assign({ order: index }, this.libs.createElement.apply(this, rest));\n  },\n  c = this.constants,\n  required = this.libs.createRequiredValidator,\n  currentUniversityDetails = this.libs.createElement(\n    \"currentUniversityDetails\",\n    \"CANDIDATE'S CURRENT UNIVERSITY DETAILS\",\n    \"\",\n    c.ELEMENTTYPE.SECTION,\n    {\n      elements: [\n        e(\n          \"currentUniversity\",\n          \"Present University\",\n          \"\",\n          c.ELEMENTTYPE.SELECT,\n          {\n            type: \"PROCESSOR\",\n            config: {\n              value: \"Get_Universities\"\n            }\n          },\n          [required()]\n        ),\n        e(\n          \"currentFaculty\",\n          \"Faculty\",\n          \"\",\n          c.ELEMENTTYPE.SELECTSET,\n          {\n            type: \"PROCESSOR\",\n            mode: c.ENTRYMODE.OBJECTID,\n            processor: \"GET_FACULTIES_DEPARTMENTS_UI\",\n            path: \"faculty\"\n          },\n          [required()]\n        )\n      ]\n    }\n  );\nthis.args.$nextStep.form.elements.push(currentUniversityDetails);\nsetImmediate(callback, null, this.args);\n","title":"Current University Details UI","uid":"CURRENT_UNIVERSITY_DETAILS_UI","requiresIdentity":false,"standalone":true,"__v":0},{"_id":{"$objectID":"5aa79e425e2c0f19a8cbe974"},"code":"let index = 0,\n  e = (...rest) => {\n    index = index + 1;\n    return Object.assign({ order: index }, this.libs.createElement.apply(this, rest));\n  },\n  c = this.constants,\n  required = this.libs.createRequiredValidator,\n  proposedUniversityDetails = this.libs.createElement(\"proposedUniversityDetails\", \"PROPOSED COURSE OF STUDY\", \"\", c.ELEMENTTYPE.SECTION, {\n    elements: [\n      e(\n        \"proposedFaculty\",\n        \"Faculty\",\n        \"\",\n        c.ELEMENTTYPE.SELECTSET,\n        {\n          type: \"PROCESSOR\",\n          mode: c.ENTRYMODE.OBJECTID,\n          processor: \"GET_FACULTIES_DEPARTMENTS_UI\",\n          path: \"faculty\"\n        },\n        [required()]\n      )\n    ]\n  });\nthis.args.$nextStep.form.elements.push(proposedUniversityDetails);\nsetImmediate(callback, null, this.args);\n","title":"Proposed Course of Study","uid":"PROPOSED_COURSE_OF_STUDY","requiresIdentity":false,"standalone":true,"__v":0},{"_id":{"$objectID":"5aa7a3ee5e2c0f19a8cbe978"},"code":"this.libs.getCertificatesHistoryUI.call(this, (er, ui) => {\n  if (er) return callback(er);\n  this.args.$nextStep.form.elements.push(...ui);\n  return callback(null, this.args);\n});\n","title":"Insert Certificates","uid":"INSERT_CERTIFICATES","requiresIdentity":false,"standalone":true,"__v":0},{"_id":{"$objectID":"5aa7a6735e2c0f19a8cbe979"},"code":"let index = 0,\n  e = (...rest) => {\n    index = index + 1;\n    return Object.assign({ order: index }, this.libs.createElement.apply(this, rest));\n  },\n  c = this.constants,\n  required = this.libs.createRequiredValidator,\n  admissionInfo = this.libs.createElement(\"admissionInfo\", \"\", \"\", c.ELEMENTTYPE.SECTION, {\n    elements: [\n      e(\n        \"hasAppliedForAdmission\",\n        \"Have you ever applied for admission into this University\",\n        \"\",\n        c.ELEMENTTYPE.SELECT,\n        {\n          type: \"PROCESSOR\",\n          config: {\n            value: \"YES_NO_OPTIONS\"\n          }\n        },\n        [required()]\n      ),\n      e(\"yearOfApplication\", \"When?\", \"\", c.ELEMENTTYPE.INPUT, {\n        type: \"date\"\n      }),\n      e(\n        \"wasOfferedAdmission\",\n        \"Were you offered admission?\",\n        \"\",\n        c.ELEMENTTYPE.SELECT,\n        {\n          type: \"PROCESSOR\",\n          config: {\n            value: \"YES_NO_OPTIONS\"\n          }\n        },\n        [required()]\n      ),\n      e(\n        \"course\",\n        \"Course\",\n        \"\",\n        c.ELEMENTTYPE.SELECT,\n        {\n          type: \"PROCESSOR\",\n          config: {\n            value: \"Get_Courses\"\n          }\n        }\n      )\n    ]\n  });\nthis.args.$nextStep.form.elements.push(admissionInfo);\nsetImmediate(callback, null, this.args);\n","title":"Previous Admission Info","uid":"PREVIOUS_ADMISSION_INFO","requiresIdentity":false,"standalone":true,"__v":0},{"_id":{"$objectID":"5aa7a8bd5e2c0f19a8cbe97a"},"code":"let index = 0,\n  e = (...rest) => {\n    index = index + 1;\n    return Object.assign({ order: index }, this.libs.createElement.apply(this, rest));\n  },\n  c = this.constants,\n  required = this.libs.createRequiredValidator,\n  scholarshipInfo = this.libs.createElement(\"scholarshipInfo\", \"\", \"\", c.ELEMENTTYPE.SECTION, {\n    elements: [\n      e(\n        \"holdsAScholarship\",\n        \"Do you hold a Scholarship?\",\n        \"\",\n        c.ELEMENTTYPE.SELECT,\n        {\n          type: \"PROCESSOR\",\n          config: {\n            value: \"YES_NO_OPTIONS\"\n          }\n        },\n        [required()]\n      ),\n      e(\"natureOfScholarship\", \"If so, state the awarding body and nature of scholarship\", \"\", c.ELEMENTTYPE.INPUT, {\n        type: \"text\"\n      }),\n      e(\"plansForTuitionFees\", \"If not, how do you intend to pay your university fees?\", \"\", c.ELEMENTTYPE.INPUT, {\n        type: \"text\"\n      })\n    ]\n  });\nthis.args.$nextStep.form.elements.push(scholarshipInfo);\nsetImmediate(callback, null, this.args);\n","title":"Scholarship Info","uid":"SCHOLARSHIP_INFO","requiresIdentity":false,"standalone":true,"__v":0},{"_id":{"$objectID":"5aa7d466bdde1236b0a3483e"},"code":"setImmediate(callback, null, [{ displayLabel: \"UNIVERSITY OF NIGERIA NSUKKA\", _id: \"59b16c8fe258df1c5c7d5c25\" }]);\n","title":"Get Universities","uid":"Get_Universities","requiresIdentity":false,"standalone":true,"__v":0}]
